{"version":3,"sources":["components/Searchbar/Searchbar.js","components/DarkModeToggle/DarkModeToggle.js","components/WeatherIcon/WeatherIcon.js","components/WeatherHighlights/WeatherHighlights.js","components/Forecast/Forecast.js","components/WeatherDetails/WeatherDetails.js","components/WeatherInfo/WeatherInfo.js","components/App/App.js","index.js"],"names":["Searchbar","isDarkMode","enter","isError","setError","useState","query","setQuery","useEffect","inputStyle","color","backgroundColor","svgStyle","stroke","errorStyle","opacity","className","type","placeholder","style","value","onChange","e","target","onKeyPress","charCode","width","height","viewBox","onClick","x1","y1","x2","y2","cx","cy","r","DarkModeToggle","setDarkMode","d","getWeatherIcon","id","Number","WeatherIcon","src","alt","calcDate","offset","undefined","Date","utc","getTime","getTimezoneOffset","getWeekday","timezone","toLocaleString","weekday","hourCycle","hour","minute","WeatherHighlights","data","skylineStyle","backgroundImage","iconStyle","city","country","href","display","weatherId","temp","desc","time","Forecast","maxTemp","toFixed","minTemp","getDirection","angle","Math","round","WeatherDetails","forecast","detailStyle","dirStyle","transform","windDir","points","sunrise","sunset","windSpeed","humidity","rainVolumen","map","day","index","api_url","a","Promise","resolve","reject","storedItem","localStorage","getItem","iat","currentTime","JSON","parse","fetch","process","json","then","weatherData","lat","coord","lon","sys","weather","main","temp_max","temp_min","description","rain","wind","speed","deg","setItem","stringify","catch","err","forecastData","daily","splice","dt","max","min","WeatherInfo","setWeatherData","setForecastData","fetchData","fetchForecastData","setTimeout","App","setCity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4bc81b0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './Searchbar.css';\r\n\r\nfunction Searchbar({ isDarkMode, enter, isError, setError }) {\r\n\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n  }, [query, setError]);\r\n\r\n  /* DarkMode styles */\r\n  const inputStyle = {\r\n    color: `${ isDarkMode ? 'var(--white)' : 'var(--black)' }`, \r\n    backgroundColor: `${ isDarkMode ? 'var(--card-background-dark)' : 'var(--card-background-light)' }`\r\n  }\r\n\r\n  const svgStyle = {\r\n    stroke: `${ isDarkMode ? 'var(--white)' : 'var(--black)' }`,\r\n  }\r\n  \r\n  const errorStyle = {\r\n    opacity: `${isError ? '1' : '0'}`,\r\n  }\r\n\r\n  function keyPressEvent(event) {\r\n    if (event.charCode === 13) {\r\n      enter(query);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input type=\"text\" placeholder=\"Suche nach einem Ort...\"\r\n        style={inputStyle}\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        onKeyPress={(e) => keyPressEvent(e)}\r\n      />\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"x\" style={svgStyle} onClick={() => setQuery('')}>\r\n        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n      </svg>\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" style={svgStyle} onClick={() => enter(query)}>\r\n        <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n        <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n      </svg>\r\n      <p className=\"error\" style={errorStyle}>'{query}' wurde nicht gefunden.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Searchbar\r\n","import './DarkModeToggle.css';\r\n\r\nfunction DarkModeToggle({ isDarkMode, setDarkMode }) {\r\n  return (\r\n    <div className=\"dark-mode-toggler\">\r\n      {isDarkMode ? \r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"moon\" onClick={() => setDarkMode(false)}>\r\n          <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\r\n        </svg> : \r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"sun\" onClick={() => setDarkMode(true)}>\r\n          <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\r\n          <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\r\n          <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\r\n          <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\r\n          <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\r\n          <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\r\n          <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\r\n          <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\r\n          <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\r\n        </svg>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DarkModeToggle\r\n","import './WeatherIcon.css';\r\n\r\nfunction WeatherIcon({ id, width, height }) {\r\n\r\n  const style = {\r\n    width: `${width}px`,\r\n    height: `${height}px`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img src={getWeatherIcon(id)} alt=\"weather icon\" style={style}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n/*\r\n    See https://openweathermap.org/weather-conditions\r\n    Group 2xx: Thunderstorm\r\n      -> cloud_rain_lightning.svg\r\n    Group 3xx: Drizzle\r\n    Group 5xx: Rain\r\n    Group 6xx: Snow\r\n      -> sun_cloud_rain.svg || moon_cloud_rain.svg\r\n    Group 7xx: Atmosphere\r\n    Group 800: Clear\r\n    Group 80x: Clouds\r\n      -> sun_wind.svg || moon.svg\r\n    Group 800: Clear\r\n      -> moon.svg\r\n*/\r\nfunction getWeatherIcon(id) {\r\n  \r\n  let leading_number = Number(`${id}`[0]);\r\n\r\n  switch (leading_number) {\r\n    case 2:\r\n      return \"./img/cloud_rain_lightning.svg\"\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"./img/sun_cloud_rain.svg\";\r\n    case 7:\r\n    case 8:\r\n      return \"./img/sun_wind.svg\";\r\n    default:\r\n      return \"./img/sun_cloud_rain.svg\";\r\n  }\r\n\r\n}\r\n\r\nexport default WeatherIcon\r\n","import './WeatherHighlights.css';\r\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\r\n\r\nfunction WeatherHighlights({ isDarkMode, data }) {\r\n\r\n  /* DarkMode styles */\r\n  const skylineStyle = {\r\n    backgroundColor: `${ isDarkMode ? 'var(--card-background-dark)' : 'var(--card-background-light)' }`,\r\n    backgroundImage: `url(./img/skyline.png)`,\r\n  }\r\n\r\n  const iconStyle = {\r\n    stroke: `${ isDarkMode ? 'var(--white)' : 'var(--black)' }`,\r\n  }\r\n\r\n  return (\r\n    <div className=\"highlights\">\r\n      <div className=\"skyline\" style={skylineStyle}>\r\n        <p className=\"location\">{data.city}, {data.country}</p>\r\n        <a href=\"https://www.freepik.com/vectors/background\" style={{display: 'none'}}>Background vector created by rawpixel.com - www.freepik.com</a>\r\n      </div>\r\n      <div className=\"time\">\r\n        <p className=\"weekday\">{getWeekday(data.timezone)}</p>\r\n        <p className=\"timestamp\">{getTime(data.timezone)}</p>\r\n      </div>\r\n      <div className=\"stats\">\r\n        <WeatherIcon id={data.weatherId} className=\"icon\"/>\r\n        <p className=\"temp\">{data.temp}°C</p>\r\n        <div>\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" style={iconStyle}>\r\n            <path d=\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"></path>\r\n          </svg>\r\n          <p>{data.desc}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction calcDate(offset) {\r\n  if (offset === undefined) {\r\n    return new Date();\r\n  }\r\n\r\n  // create Date object for current location\r\n  var d = new Date();\r\n\r\n  // convert to msec\r\n  // subtract local time zone offset\r\n  // get UTC time in msec\r\n  var utc = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n\r\n  // create new Date object\r\n  // using supplied offset and return it\r\n  return new Date(utc + (1000 * offset));\r\n}\r\n\r\n/*\r\n  Gets the long weekday format\r\n  based on a timezone offset\r\n*/\r\nfunction getWeekday(timezone) {\r\n  var date = calcDate(timezone);\r\n  return date.toLocaleString('de-DE', {weekday: 'long'});\r\n}\r\n\r\n/*\r\n  Gets the 24h time format\r\n  based on a timezone offset\r\n*/\r\nfunction getTime(timezone) {\r\n  var date = calcDate(timezone);\r\n  return date.toLocaleString('de-DE', {hourCycle: 'h23', hour: '2-digit', minute: '2-digit'})\r\n}\r\n\r\nexport default WeatherHighlights\r\n","import './Forecast.css';\r\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\r\n\r\nfunction Forecast({ data }) {\r\n  return (\r\n    <div className=\"forecast\">\r\n      <p className=\"forecastWeekday\">{getWeekday(data.time)}</p>\r\n      <WeatherIcon id={data.weatherId} width={70} height={50}/>\r\n      <div className=\"temps\">\r\n        <p className=\"max-temp\">{Number(data.maxTemp).toFixed(0)}<span>°C</span></p>\r\n        <p className=\"min-temp\">{Number(data.minTemp).toFixed(0)}<span>°C</span></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\n  Gets the short weekday format\r\n  for a given time\r\n*/\r\nfunction getWeekday(time) {\r\n  var date = new Date(time * 1000);\r\n  return date.toLocaleString('de-DE', {weekday: 'short'});\r\n}\r\n\r\nexport default Forecast\r\n","import React from 'react'\r\nimport Forecast from '../Forecast/Forecast';\r\nimport './WeatherDetails.css';\r\n\r\nfunction WeatherDetails({ isDarkMode, data, forecast }) {\r\n\r\n  /* DarkMode styles */\r\n  const detailStyle = {\r\n    backgroundColor: `${ isDarkMode ? 'var(--card-background-dark)' : 'var(--card-background-light)'}`\r\n  }\r\n\r\n  /* Icon style */\r\n  const dirStyle = {\r\n    transform: `rotate(${data.windDir}deg)`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"today\">\r\n        <h3>Heute</h3>\r\n        <div className=\"details\">\r\n          <div>\r\n            <div className=\"detail min-max\" style={detailStyle}>\r\n              <p>Höchst- & Tiefstwerte</p>\r\n              <div>\r\n                <div>\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\" stroke=\"#023e8a\"></path>\r\n                  </svg>\r\n                  <p>{Number(data.minTemp).toFixed(1)}<span>°C</span></p>\r\n                </div>\r\n                <div>\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\" stroke=\"#f25c54\"></path>\r\n                  </svg>\r\n                  <p>{Number(data.maxTemp).toFixed(1)}<span>°C</span></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"detail sunrise-sunset\" style={detailStyle}>\r\n              <p>Sonnenaufgang & Sonnenuntergang</p>\r\n              <div>\r\n                <div>\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M17 18a5 5 0 0 0-10 0\" stroke=\"#ffdd00\"></path>\r\n                    <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"9\"></line>\r\n                    <line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line>\r\n                    <polyline points=\"8 6 12 2 16 6\"></polyline>\r\n                  </svg>\r\n                  <p>{getTime(data.sunrise)}</p>\r\n                </div>\r\n                <div>\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M17 18a5 5 0 0 0-10 0\" stroke=\"#ffdd00\"></path>\r\n                    <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"2\"></line>\r\n                    <line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\" stroke=\"#ffdd00\"></line>\r\n                    <line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line>\r\n                    <polyline points=\"16 5 12 9 8 5\"></polyline>\r\n                  </svg>\r\n                  <p>{getTime(data.sunset)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"detail wind\" style={detailStyle}>\r\n              <p>Wind</p>\r\n              <div>\r\n                <div>\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2\"></path>\r\n                  </svg>\r\n                  <p>{Number(Number(data.windSpeed * 3.6).toFixed(1))}<span>km/h</span></p>\r\n                </div>\r\n                <div>\r\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" style={dirStyle}>\r\n                    <polygon points=\"12 2 19 21 12 17 5 21 12 2\"></polygon>\r\n                  </svg>\r\n                  <p>{getDirection(data.windDir)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"detail humidity\" style={detailStyle}>\r\n              <p>Luftfeuchtigkeit</p>\r\n              <div>\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\" stroke=\"#00b4d8\"></path>\r\n                </svg>\r\n                <p>{data.humidity}<span>%</span></p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detail rain\" style={detailStyle}>\r\n              <p>Regenmenge (1 Std.)</p>\r\n              <div>\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                  <line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"21\"></line>\r\n                  <line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"21\"></line>\r\n                  <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"23\"></line>\r\n                  <path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>\r\n                </svg>\r\n                <p>{data.rainVolumen}<span>mm</span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3>Woche</h3>\r\n        <ul>\r\n          {forecast.data ? \r\n            forecast.data.map((day, index) => {\r\n              return <Forecast data={day} key={index}></Forecast>\r\n            }) :\r\n            <></>\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\n  Gets the short direction\r\n  for a given degree\r\n*/\r\nfunction getDirection(angle) {\r\n   var directions = [\"N\", \"NO\", \"O\", \"SO\", \"S\", \"SW\", \"W\", \"NW\"]\r\n   var index = Math.round(((angle %= 360) < 0 ? angle + 360 : angle) / 45) % 8;\r\n   return directions[index]\r\n}\r\n\r\n/*\r\n  Gets the 24h time format\r\n  for a given time in seconds\r\n*/\r\nfunction getTime(time) {\r\n  var date = new Date(time * 1000);\r\n  return date.toLocaleString('de-DE', {hourCycle: 'h23', hour: '2-digit', minute: '2-digit'})\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React, { useEffect, useState } from 'react'\r\nimport './WeatherInfo.css';\r\nimport WeatherHighlights from '../WeatherHighlights/WeatherHighlights';\r\nimport WeatherDetails from '../WeatherDetails/WeatherDetails';\r\n\r\nconst api_url = `https://api.openweathermap.org/data/2.5`;\r\n\r\nfunction WeatherInfo({ isDarkMode, city, setError }) {\r\n\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [forecastData, setForecastData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (city) {\r\n      fetchData(city).then((data) => {\r\n        if (data) {\r\n          setWeatherData(data);\r\n          fetchForecastData(data.lat, data.lon).then((data) => {\r\n            if (data) {\r\n              setForecastData(data);\r\n            }\r\n          })\r\n        }\r\n      }).catch((err) => {\r\n        setError(true);\r\n        setTimeout(() => {\r\n          setError(false);\r\n        }, 2000);\r\n      });\r\n    }\r\n  }, [city, setError]);\r\n\r\n  return (\r\n    <div className=\"weatherInfo\">\r\n      <div className=\"left\">\r\n        <WeatherHighlights isDarkMode={isDarkMode} data={weatherData}></WeatherHighlights>\r\n      </div>\r\n      <div className=\"right\">\r\n        <WeatherDetails isDarkMode={isDarkMode} data={weatherData} forecast={forecastData}></WeatherDetails>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\n  Fetches current weather data\r\n  for a city\r\n*/\r\nasync function fetchData(city) {\r\n  return new Promise(async (resolve, reject) => {\r\n\r\n    // Check if data is in localstorage\r\n    var storedItem = localStorage.getItem(`city_${city}`);\r\n    if (storedItem) {\r\n      var iat = storedItem.iat;\r\n\r\n      var currentTime = new Date().getTime();\r\n\r\n      // if data is not older then 5min return it\r\n      if (iat + 1000 * 60 * 5 > currentTime) {\r\n        resolve(JSON.parse(storedItem));\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    // fetch\r\n    const res = await fetch(`${api_url}/weather?q=${city}&appid=${process.env.REACT_APP_OWM_APP_ID}&units=metric&lang=de`);\r\n    res.json().then((data) => {\r\n      if (data) {\r\n        // extract relevant data\r\n        let weatherData = {\r\n          iat: new Date().getTime(),\r\n          lat: data.coord.lat,\r\n          lon: data.coord.lon,\r\n          city,\r\n          country: data.sys.country,\r\n          timezone: data.timezone,\r\n          weatherId: data.weather[0].id,\r\n          temp: Math.round(data.main.temp),\r\n          maxTemp: data.main.temp_max,\r\n          minTemp: data.main.temp_min,\r\n          humidity: data.main.humidity,\r\n          desc: data.weather[0].description,\r\n          rainVolumen: data.rain ? data.rain['1h'] : 0,\r\n          windSpeed: data.wind ? data.wind.speed : 0,\r\n          windDir: data.wind ? data.wind.deg : 0,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n        }\r\n        \r\n        // store to localstorage for caching\r\n        localStorage.setItem(`city_${city}`, JSON.stringify(weatherData));\r\n        resolve(weatherData);\r\n      }\r\n    }).catch((err) => {\r\n      reject(err);\r\n    });\r\n  })\r\n}\r\n\r\n/*\r\n  Fetches 7 days weather forecast\r\n  for lat & lon\r\n*/\r\nasync function fetchForecastData(lat, lon) {\r\n  return new Promise(async (resolve, reject) => {\r\n\r\n    // Check if data is in localstorage\r\n    var storedItem = localStorage.getItem(`forecast_${lat}_${lon}`);\r\n    if (storedItem) {\r\n      var iat = storedItem.iat;\r\n\r\n      var currentTime = new Date().getTime();\r\n\r\n      // if data is not older then 1h return it\r\n      if (iat + 1000 * 60 * 60 > currentTime) {\r\n        resolve(JSON.parse(storedItem));\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    // fetch\r\n    const res = await fetch(`${api_url}/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly,alerts&appid=${process.env.REACT_APP_OWM_APP_ID}&units=metric&lang=de`);\r\n    res.json().then((data) => {\r\n      if (data) {\r\n        // extract next 7 days\r\n        var forecastData = {\r\n          iat: new Date().getTime(),\r\n          data: data.daily.splice(1).map((day) => {\r\n            return {\r\n              time: day.dt,\r\n              weatherId: day.weather[0].id,\r\n              maxTemp: day.temp.max,\r\n              minTemp: day.temp.min\r\n            }\r\n          })\r\n        }\r\n        \r\n        // store to localstorage for caching\r\n        localStorage.setItem(`forecast_${lat}_${lon}`, JSON.stringify(forecastData));\r\n        resolve(forecastData);\r\n      }\r\n    }).catch((err) => {\r\n      reject(err);\r\n    });\r\n  })\r\n}\r\n\r\nexport default WeatherInfo\r\n","import './App.css';\nimport { useState } from 'react';\nimport Searchbar from '../Searchbar/Searchbar';\nimport DarkModeToggle from '../DarkModeToggle/DarkModeToggle';\nimport WeatherInfo from '../WeatherInfo/WeatherInfo';\n\nfunction App() {\n\n  const [city, setCity] = useState('Berlin');\n  const [isDarkMode, setDarkMode] = useState(true);\n  const [isError, setError] = useState(false);\n  \n  /* DarkMode styles */\n  const style = {\n    backgroundColor: `${ isDarkMode ? 'var(--background-dark)' : 'var(--background-light)' }`,\n    color: `${ isDarkMode ? 'var(--white)' : 'var(--black)' }`, \n  }\n\n  return (\n    <div className=\"App\" style={style}>\n      <DarkModeToggle isDarkMode={isDarkMode} setDarkMode={setDarkMode} />\n      <Searchbar isDarkMode={isDarkMode} enter={(query) => setCity(query)} isError={isError} setError={setError}></Searchbar>\n      <WeatherInfo isDarkMode={isDarkMode} city={city} setError={setError}></WeatherInfo>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}